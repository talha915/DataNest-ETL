services:
  db:
    container_name: postgres_container
    image: postgres:14.17
    ports:
      - 5000:5432
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: db_password
    volumes:
      - ./postgres/data:/var/lib/postgresql/data  
      - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
    networks:
      - my-network 
    healthcheck:  # âœ… Marks DB as healthy once ready
      test: ["CMD-SHELL", "pg_isready -U db_user -d db"]
      interval: 10s
      timeout: 5s
      retries: 5   

  airflow:
    container_name: airflow_container
    image: apache/airflow:3.0.0   
    ports: 
      - 8000:8080
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@db:5432/airflow_db
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes: 
      - ./airflow/dags:/opt/airflow/dags
      - ./api-request:/opt/airflow/api-request
    depends_on:
      db:
        condition: service_healthy  
    networks:
      - my-network
    command: >
      bash -c "airflow db migrate && airflow standalone"
    # command: >
    #   bash -c "
    #     until pg_isready -h db -p 5432; do echo waiting for db; sleep 2; done &&
    #     airflow db migrate &&
    #     airflow standalone
    #   "

  # dbt:
  #   container_name: dbt_container
  #   image: ghcr.io/dbt-labs/dbt-postgres:1.9.latest
  #   volumes:
  #     - ./dbt/my_project:/usr/app
  #     - ./dbt:/root/.dbt
  #   working_dir: /usr/app
  #   environment:
  #     DBT_PROFILES_DIR: "/root/.dbt"
  #   depends_on:
  #     - db
  #   networks: 
  #     - my-network
  #   command: debug      

networks:
  my-network:
    driver: bridge          